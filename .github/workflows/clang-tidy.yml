name: clang-tidy

on:
  push:
    branches:
      - main
      - dev
    paths:
      - '**.clang-tidy'
  workflow_dispatch:
  schedule:
    # Once every night
    - cron: "0 1 * * *"

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  ResInsight-clang-tidy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: TAServers/vcpkg-cache@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Linux dependencies
        run: |
          sudo apt-get update --option="APT::Acquire::Retries=3"
          sudo apt-get install --option="APT::Acquire::Retries=3" libxkbcommon-x11-0 libgl1-mesa-dev mesa-common-dev libglfw3-dev libglu1-mesa-dev libhdf5-dev
          sudo apt-get install clang-tidy-19 clang-format-19

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.7.0
          dir: "${{ github.workspace }}/Qt/"
          cache: true
          modules: "qtnetworkauth qtcharts"

      - name: vcpkg bootstrap
        run: ThirdParty/vcpkg/bootstrap-vcpkg.sh
  
      - name: Restore vcpkg cache
        id: vcpkg-cache
        uses: TAServers/vcpkg-cache@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create compile commands and run clang-tidy
        # https://clang.llvm.org/extra/doxygen/run-clang-tidy_8py_source.html
        env:
          VCPKG_FEATURE_FLAGS: "binarycaching" # Possibly redundant, but explicitly sets the binary caching feature flag
          VCPKG_BINARY_SOURCES: "clear;files,${{ steps.vcpkg-cache.outputs.path }},readwrite"
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=ThirdParty/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_C_COMPILER=clang-19 -DCMAKE_CXX_COMPILER=clang++-19 -DRESINSIGHT_USE_OPENMP=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          mv compile_commands.json compile_commands_original.json
          python ../scripts/fix_json_database.py compile_commands_original.json >> compile_commands.json
